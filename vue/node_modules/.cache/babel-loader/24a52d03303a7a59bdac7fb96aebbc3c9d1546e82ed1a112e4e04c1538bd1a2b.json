{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"Analysis\",\n  data() {\n    return {\n      //页面中所有变量都放在这里\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ids: [],\n      courseData: [],\n      courseId: 1,\n      // 默认传入的courseId为1\n      scoreDistributionData: [] // 用于存储成绩分布数据\n    };\n  },\n\n  created() {\n    this.load(1); //页面创建完后调用的方法，请求显示第一页的数据\n    this.loadCourse();\n    this.loadAverageScores();\n    this.loadScoreDistribution();\n  },\n  methods: {\n    loadCourse() {\n      //教师只能新增自己任教的课程的成绩，所以用params插入teacherId参数作为/course/selectAll的查询条件\n      //0523：这里我要改成录入成绩只由管理员完成，所以不需要传入teacherID了\n      this.$request.get('/course/selectAll'\n      //   params:{\n      //     teacherId:this.user.role==='TEACHER'?this.user.id:null}\n      // }\n      ).then(res => {\n        if (res.code === '200') {\n          this.courseData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadScoreDistribution() {\n      if (this.user.role !== 'ADMIN') return;\n      this.$request.get('/score/distribution-by-class', {\n        params: {\n          courseId: this.courseId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.scoreDistributionData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadAverageScores() {\n      if (this.user.role !== 'ADMIN') return; // 确保只有管理员调用此方法\n      this.$request.get('/score/average-by-class', {\n        params: {\n          courseId: this.courseId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          // 按班级名称进行排序\n          res.data.sort((a, b) => a.class_name.localeCompare(b.class_name));\n          this.renderChart(res.data);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    renderChart(data) {\n      const chart = echarts.init(document.getElementById('average-score-chart'));\n      const option = {\n        title: {\n          text: '各班级平均分折线图'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(item => item.class_name)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '平均分',\n          type: 'line',\n          data: data.map(item => item.avg_score)\n        }]\n      };\n      chart.setOption(option);\n    },\n    load() {\n      // 分页查询 通过输入页数来获取分页的数据\n      this.loadAverageScores(); // 查询按钮点击后加载对应课程的平均分图表数据\n      this.loadScoreDistribution(); // 加载成绩分布数据\n    },\n\n    reset() {\n      //重置方法（查询旁边的按钮）清空输入框，返回第一页\n      this.courseId = 1; // 重置为默认的courseId\n      this.loadAverageScores(); // 重新加载默认的图表数据\n      this.loadScoreDistribution(); // 重置时重新加载成绩分布数据\n    },\n\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","tableData","pageNum","pageSize","total","form","user","JSON","parse","localStorage","getItem","ids","courseData","courseId","scoreDistributionData","created","load","loadCourse","loadAverageScores","loadScoreDistribution","methods","$request","get","then","res","code","$message","error","msg","role","params","sort","a","b","class_name","localeCompare","renderChart","chart","init","document","getElementById","option","title","text","tooltip","trigger","xAxis","type","map","item","yAxis","series","avg_score","setOption","reset","handleCurrentChange"],"sources":["src/views/manager/Analysis.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\" v-if=\"user.role !== 'STUDENT'\">\r\n      <el-select v-model=\"courseId\" placeholder=\"请选择课程\" style=\"width: 200px\">\r\n        <el-option v-for=\"item in courseData\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n      </el-select>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load()\">查询</el-button> <!--调用了load方法-->\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n\r\n    <div class=\"table\" v-if=\"user.role === 'ADMIN'\">\r\n      <div id=\"average-score-chart\" style=\"width: 100%; height: 400px;\"  ></div>\r\n\r\n    </div>\r\n\r\n    <el-table :data=\"distributionData\" v-if=\"distributionData.length > 0\">\r\n      <el-table-column prop=\"className\" label=\"班级\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"excellent\" label=\"优秀(90分以上)\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"good\" label=\"良好(80-90分)\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"average\" label=\"中等(70-80分)\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"pass\" label=\"及格(60-70分)\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"fail\" label=\"不及格(60分以下)\" width=\"180\"></el-table-column>\r\n    </el-table>\r\n    <div v-else>\r\n      <p>暂无数据</p>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n  name: \"Analysis\",\r\n  data() {\r\n    return {  //页面中所有变量都放在这里\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      ids: [],\r\n      courseData: [],\r\n      courseId: 1 , // 默认传入的courseId为1\r\n      scoreDistributionData: []  // 用于存储成绩分布数据\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)  //页面创建完后调用的方法，请求显示第一页的数据\r\n    this.loadCourse()\r\n    this.loadAverageScores()\r\n    this.loadScoreDistribution()\r\n  },\r\n  methods: {\r\n    loadCourse() { //教师只能新增自己任教的课程的成绩，所以用params插入teacherId参数作为/course/selectAll的查询条件\r\n      //0523：这里我要改成录入成绩只由管理员完成，所以不需要传入teacherID了\r\n      this.$request.get('/course/selectAll'\r\n          //   params:{\r\n          //     teacherId:this.user.role==='TEACHER'?this.user.id:null}\r\n          // }\r\n      ).then(res => {\r\n        if (res.code === '200') {\r\n          this.courseData = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    loadScoreDistribution() {\r\n      if (this.user.role !== 'ADMIN') return;\r\n      this.$request.get('/score/distribution-by-class', {\r\n        params: {\r\n          courseId: this.courseId\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.scoreDistributionData = res.data;\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    loadAverageScores() {\r\n      if (this.user.role !== 'ADMIN') return;  // 确保只有管理员调用此方法\r\n      this.$request.get('/score/average-by-class', {\r\n        params: {\r\n          courseId: this.courseId\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          // 按班级名称进行排序\r\n          res.data.sort((a, b) => a.class_name.localeCompare(b.class_name));\r\n          this.renderChart(res.data);\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    renderChart(data) {\r\n      const chart = echarts.init(document.getElementById('average-score-chart'));\r\n      const option = {\r\n        title: {\r\n          text: '各班级平均分折线图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(item => item.class_name)\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: '平均分',\r\n          type: 'line',\r\n          data: data.map(item => item.avg_score)\r\n        }]\r\n      };\r\n      chart.setOption(option);\r\n    },\r\n    load() {  // 分页查询 通过输入页数来获取分页的数据\r\n      this.loadAverageScores();  // 查询按钮点击后加载对应课程的平均分图表数据\r\n      this.loadScoreDistribution();  // 加载成绩分布数据\r\n    },\r\n    reset() { //重置方法（查询旁边的按钮）清空输入框，返回第一页\r\n      this.courseId = 1;  // 重置为默认的courseId\r\n      this.loadAverageScores();  // 重新加载默认的图表数据\r\n      this.loadScoreDistribution();  // 重置时重新加载成绩分布数据\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AAkCA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MAAA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MAEAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,GAAA;MACAC,UAAA;MACAC,QAAA;MAAA;MACAC,qBAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,IAAA;IACA,KAAAC,UAAA;IACA,KAAAC,iBAAA;IACA,KAAAC,qBAAA;EACA;EACAC,OAAA;IACAH,WAAA;MAAA;MACA;MACA,KAAAI,QAAA,CAAAC,GAAA;MACA;MACA;MACA;MACA,EAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAb,UAAA,GAAAY,GAAA,CAAAxB,IAAA;QACA;UACA,KAAA0B,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;IACAT,sBAAA;MACA,SAAAb,IAAA,CAAAuB,IAAA;MACA,KAAAR,QAAA,CAAAC,GAAA;QACAQ,MAAA;UACAjB,QAAA,OAAAA;QACA;MACA,GAAAU,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAX,qBAAA,GAAAU,GAAA,CAAAxB,IAAA;QACA;UACA,KAAA0B,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;IACAV,kBAAA;MACA,SAAAZ,IAAA,CAAAuB,IAAA;MACA,KAAAR,QAAA,CAAAC,GAAA;QACAQ,MAAA;UACAjB,QAAA,OAAAA;QACA;MACA,GAAAU,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACAD,GAAA,CAAAxB,IAAA,CAAA+B,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAE,UAAA,CAAAC,aAAA,CAAAF,CAAA,CAAAC,UAAA;UACA,KAAAE,WAAA,CAAAZ,GAAA,CAAAxB,IAAA;QACA;UACA,KAAA0B,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;IACAQ,YAAApC,IAAA;MACA,MAAAqC,KAAA,GAAAvC,OAAA,CAAAwC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,MAAAC,MAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACA/C,IAAA,EAAAA,IAAA,CAAAgD,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAf,UAAA;QACA;QACAgB,KAAA;UACAH,IAAA;QACA;QACAI,MAAA;UACApD,IAAA;UACAgD,IAAA;UACA/C,IAAA,EAAAA,IAAA,CAAAgD,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAG,SAAA;QACA;MACA;MACAf,KAAA,CAAAgB,SAAA,CAAAZ,MAAA;IACA;IACAzB,KAAA;MAAA;MACA,KAAAE,iBAAA;MACA,KAAAC,qBAAA;IACA;;IACAmC,MAAA;MAAA;MACA,KAAAzC,QAAA;MACA,KAAAK,iBAAA;MACA,KAAAC,qBAAA;IACA;;IACAoC,oBAAArD,OAAA;MACA,KAAAc,IAAA,CAAAd,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}