{"ast":null,"code":"export default {\n  name: \"Homework\",\n  data() {\n    return {\n      //页面中所有变量都放在这里\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      status: null,\n      content: null,\n      fromVisible: false,\n      checkVisible: false,\n      //新建一个审核弹窗的可见变量\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        content: [{\n          required: true,\n          message: '请输入内容',\n          trigger: 'blur'\n        }],\n        courseId: [{\n          required: true,\n          message: '请选择课程',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      courseData: []\n    };\n  },\n  created() {\n    this.load(1); //页面创建完后调用的方法，请求显示第一页的数据\n    this.loadCourse();\n  },\n  methods: {\n    loadCourse() {\n      //学生只能看到自己选的课\n      this.$request.get('/choice/selectAll', {\n        params: {\n          studentId: this.user.role === 'STUDENT' ? this.user.id : null\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.courseData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {\n        studentId: this.user.id,\n        status: '待审核'\n      }; // 在点击请假申请按钮时，传入当前学生用户的id作为form表单（这个表单是要传给后台作数据库插入的）的studenId值\n      //同时新增申请的状态默认是待审核\n      this.fromVisible = true;\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row));\n      this.form.status = '待审核';\n      this.form.descr = '';\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleCheck(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.checkVisible = true;\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/homework/update' : '/homework/add',\n            //判断表单有没有id，如果有就是编辑，如果没有就是新增\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    check() {\n      this.$request.put('homework/update', this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success('操作成功');\n          this.load(1); //刷新一下\n          this.checkVisible = false; //关闭当前弹窗\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('你确定撤销请假申请吗？', '确认撤销', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/homework/delete/' + id).then(res => {\n          //把id传给后台 即通过访问homework/delete/id这个url调用通过id删除的方法\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); // ids是一个数组 这里是将复选中的所有id值赋值到数组中 如 [1,2]\n    },\n\n    load(pageNum) {\n      // 分页查询 通过输入页数来获取分页的数据\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/homework/selectPage', {\n        //selectPage是HomeworkService里的接口\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          status: this.status,\n          content: this.content\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      //重置方法（查询旁边的按钮）清空输入框，返回第一页\n      this.status = null;\n      this.content = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleFileSuccess(res) {\n      this.form.file = res.data;\n    },\n    down(url) {\n      location.href = url;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","status","content","fromVisible","checkVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","courseId","ids","courseData","created","load","loadCourse","methods","$request","get","params","studentId","role","id","then","res","code","$message","error","msg","handleAdd","handleEdit","row","stringify","descr","handleCheck","save","$refs","formRef","validate","valid","url","method","success","check","put","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","list","reset","handleCurrentChange","handleFileSuccess","file","down","location","href"],"sources":["src/views/manager/Homework.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入请假说明\" style=\"width: 200px\" v-model=\"content\"></el-input>\r\n      <el-select v-model=\"status\" placeholder=\"请选择状态\" style=\"width: 200px; margin-left: 5px\">\r\n        <el-option label=\"待审核\" value=\"待审核\"></el-option>\r\n        <el-option label=\"审核通过\" value=\"审核通过\"></el-option>\r\n        <el-option label=\"审核不通过\" value=\"审核不通过\"></el-option>\r\n      </el-select>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button> <!--调用了load方法-->\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\" v-if=\"user.role==='STUDENT'\">提交作业</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"content\" label=\"作业说明\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"studentName\" label=\"学生姓名\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"courseName\" label=\"课程名称\"></el-table-column>\r\n        <el-table-column prop=\"teacherName\" label=\"授课教师\"></el-table-column>\r\n\r\n        <el-table-column prop=\"file\" label=\"作业文件\">\r\n          <template v-slot=\"scope\">\r\n            <el-button type=\"warning\" size=\"mini\" @click=\"down(scope.row.file)\">下载查看</el-button>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"score\" label=\"作业打分\"></el-table-column>\r\n        <el-table-column prop=\"descr\" label=\"审核说明\"></el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\" v-if=\"user.role === 'STUDENT' && !scope.row.score\">编辑</el-button>\r\n            <el-button plain type=\"primary\" @click=\"handleCheck(scope.row)\" size=\"mini\" v-if=\"user.role === 'ADMIN' && scope.row.status === '待审核'\">审核</el-button>\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)  v-if=\"user.role === 'STUDENT' && !scope.row.score\">撤回</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\"> <!--分页组件，点击分页按钮会触发 71行设置每行显示的总数-->\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n<!--新增弹窗（按提交作业）-->\r\n    <el-dialog title=\"作业信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n\r\n        <el-form-item prop=\"content\" label=\"作业说明\">\r\n          <el-input type=\"textarea\" :rows=\"5\" v-model=\"form.content\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"courseId\" label=\"选择课程\">\r\n          <el-select v-model=\"form.courseId\" placeholder=\"请选择课程\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in courseData\" :label=\"item.name\" :value=\"item.courseId\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"作业文件\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"text\"\r\n              :on-success=\"handleFileSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传文件</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"请假审核\" :visible.sync=\"checkVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\">\r\n        <el-form-item prop=\"status\" label=\"审核状态\">\r\n          <el-select v-model=\"form.status\" placeholder=\"请选择状态\" style=\"width: 100%\">\r\n            <el-option label=\"待审核\" value=\"待审核\"></el-option>\r\n            <el-option label=\"审核通过\" value=\"审核通过\"></el-option>\r\n            <el-option label=\"审核不通过\" value=\"审核不通过\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"descr\" label=\"审核说明\">\r\n          <el-input type=\"textarea\" :rows=\"4\" v-model=\"form.descr\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"checkVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"check\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Homework\",\r\n  data() {\r\n    return {  //页面中所有变量都放在这里\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      status: null,\r\n      content:null,\r\n      fromVisible: false,\r\n      checkVisible: false, //新建一个审核弹窗的可见变量\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        content: [\r\n          {required: true, message: '请输入内容', trigger: 'blur'},\r\n        ],\r\n        courseId: [\r\n          {required: true, message: '请选择课程', trigger: 'blur'},\r\n        ]\r\n      },\r\n      ids: [],\r\n      courseData:[]\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)  //页面创建完后调用的方法，请求显示第一页的数据\r\n    this.loadCourse()\r\n  },\r\n  methods: {\r\n    loadCourse() { //学生只能看到自己选的课\r\n      this.$request.get('/choice/selectAll',{\r\n        params:{\r\n          studentId:this.user.role==='STUDENT'?this.user.id:null}\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.courseData = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {\r\n        studentId:this.user.id,\r\n        status: '待审核'\r\n      }  // 在点击请假申请按钮时，传入当前学生用户的id作为form表单（这个表单是要传给后台作数据库插入的）的studenId值\r\n      //同时新增申请的状态默认是待审核\r\n      this.fromVisible = true\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))\r\n      this.form.status='待审核'\r\n      this.form.descr=''\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleCheck(row){\r\n      this.form = JSON.parse(JSON.stringify(row))\r\n      this.checkVisible=true\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/homework/update' : '/homework/add', //判断表单有没有id，如果有就是编辑，如果没有就是新增\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    check(){\r\n      this.$request.put('homework/update',this.form).then(res=>{\r\n        if (res.code === '200') {\r\n          this.$message.success('操作成功')\r\n          this.load(1) //刷新一下\r\n          this.checkVisible = false //关闭当前弹窗\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('你确定撤销请假申请吗？', '确认撤销', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/homework/delete/' + id).then(res => { //把id传给后台 即通过访问homework/delete/id这个url调用通过id删除的方法\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)   // ids是一个数组 这里是将复选中的所有id值赋值到数组中 如 [1,2]\r\n    },\r\n    load(pageNum) {  // 分页查询 通过输入页数来获取分页的数据\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/homework/selectPage', { //selectPage是HomeworkService里的接口\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n\r\n          status: this.status,\r\n          content: this.content,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() { //重置方法（查询旁边的按钮）清空输入框，返回第一页\r\n      this.status = null\r\n      this.content= null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleFileSuccess(res){\r\n      this.form.file = res.data\r\n    },\r\n    down(url){\r\n      location.href=url\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}