{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"Analysis\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ids: [],\n      courseData: [],\n      courseId: 1,\n      distributionData: [],\n      // 用于存储各班成绩分布数据\n      studentDistributionData: [] // 用于存储当前学生成绩分布数据\n    };\n  },\n\n  created() {\n    this.load(1);\n    this.loadCourse();\n    this.loadAverageScores();\n    this.loadDistributionData();\n    if (this.user.role === 'STUDENT') {\n      this.loadStudentDistributionData();\n    }\n  },\n  methods: {\n    loadCourse() {\n      this.$request.get('/course/selectAll').then(res => {\n        if (res.code === '200') {\n          this.courseData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadAverageScores() {\n      if (this.user.role !== 'ADMIN') return;\n      this.$request.get('/score/average-by-class', {\n        params: {\n          courseId: this.courseId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          res.data.sort((a, b) => a.class_name.localeCompare(b.class_name));\n          this.renderChart(res.data);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadDistributionData() {\n      if (this.user.role !== 'ADMIN') return;\n      this.$request.get('/score/distribution-by-class', {\n        params: {\n          courseId: this.courseId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.distributionData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadStudentDistributionData() {\n      this.$request.get('/score/distribution-by-student').then(res => {\n        if (res.code === '200') {\n          const data = res.data[0]; // 假设返回的data是 [{average: 0, fail: 0, excellent: 0, pass: 0, good: 1}]\n          this.studentDistributionData = data;\n          this.$nextTick(() => {\n            this.renderStudentChart(data);\n          });\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    renderChart(data) {\n      const chart = echarts.init(document.getElementById('average-score-chart'));\n      const option = {\n        title: {\n          text: '各班级平均分折线图'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(item => item.class_name)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '平均分',\n          type: 'line',\n          data: data.map(item => item.avg_score)\n        }]\n      };\n      chart.setOption(option);\n    },\n    renderStudentChart(data) {\n      const chart = echarts.init(document.getElementById('student-score-distribution-chart'));\n      const option = {\n        title: {\n          text: '个人成绩分布图'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        series: [{\n          name: '成绩分布',\n          type: 'pie',\n          radius: '50%',\n          data: [{\n            value: data.excellent,\n            name: '优秀(90分以上)'\n          }, {\n            value: data.good,\n            name: '良好(80-90分)'\n          }, {\n            value: data.average,\n            name: '中等(70-80分)'\n          }, {\n            value: data.pass,\n            name: '及格(60-70分)'\n          }, {\n            value: data.fail,\n            name: '不及格(60分以下)'\n          }]\n        }]\n      };\n      chart.setOption(option);\n    },\n    load() {\n      this.loadAverageScores();\n      this.loadDistributionData(); // 查询按钮点击后加载对应课程的成绩分布数据\n    },\n\n    reset() {\n      this.courseId = 1;\n      this.loadAverageScores();\n      this.loadDistributionData(); // 重新加载默认的成绩分布数据\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","tableData","pageNum","pageSize","total","form","user","JSON","parse","localStorage","getItem","ids","courseData","courseId","distributionData","studentDistributionData","created","load","loadCourse","loadAverageScores","loadDistributionData","role","loadStudentDistributionData","methods","$request","get","then","res","code","$message","error","msg","params","sort","a","b","class_name","localeCompare","renderChart","$nextTick","renderStudentChart","chart","init","document","getElementById","option","title","text","tooltip","trigger","xAxis","type","map","item","yAxis","series","avg_score","setOption","radius","value","excellent","good","average","pass","fail","reset"],"sources":["src/views/manager/Analysis.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\" v-if=\"user.role !== 'STUDENT'\">\r\n      <el-select v-model=\"courseId\" placeholder=\"请选择课程\" style=\"width: 200px\">\r\n        <el-option v-for=\"item in courseData\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n      </el-select>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load()\">查询</el-button> <!--调用了load方法-->\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n\r\n    <div class=\"table\" v-if=\"user.role === 'ADMIN'\">\r\n      <div id=\"average-score-chart\" style=\"width: 100%; height: 400px;\"  ></div>\r\n\r\n      <el-table :data=\"distributionData\" v-if=\"distributionData.length > 0\">\r\n        <el-table-column prop=\"className\" label=\"班级\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"excellent\" label=\"优秀(90分以上)\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"good\" label=\"良好(80-90分)\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"average\" label=\"中等(70-80分)\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"pass\" label=\"及格(60-70分)\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"fail\" label=\"不及格(60分以下)\" width=\"180\"></el-table-column>\r\n      </el-table>\r\n      <div v-else>\r\n        <p>暂无数据</p>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"table\" v-if=\"user.role === 'STUDENT'\">\r\n      <div id=\"student-score-distribution-chart\" style=\"width: 100%; height: 400px;\"></div>\r\n    </div>\r\n\r\n    \r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n  name: \"Analysis\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      ids: [],\r\n      courseData: [],\r\n      courseId: 1,\r\n      distributionData: [] ,// 用于存储各班成绩分布数据\r\n      studentDistributionData: [] // 用于存储当前学生成绩分布数据\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n    this.loadCourse()\r\n    this.loadAverageScores()\r\n    this.loadDistributionData()\r\n    if (this.user.role === 'STUDENT') {\r\n      this.loadStudentDistributionData();\r\n    }\r\n  },\r\n  methods: {\r\n    loadCourse() {\r\n      this.$request.get('/course/selectAll').then(res => {\r\n        if (res.code === '200') {\r\n          this.courseData = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    loadAverageScores() {\r\n      if (this.user.role !== 'ADMIN') return;\r\n      this.$request.get('/score/average-by-class', {\r\n        params: {\r\n          courseId: this.courseId\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          res.data.sort((a, b) => a.class_name.localeCompare(b.class_name));\r\n          this.renderChart(res.data);\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    loadDistributionData() {\r\n      if (this.user.role !== 'ADMIN') return;\r\n      this.$request.get('/score/distribution-by-class', {\r\n        params: {\r\n          courseId: this.courseId\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.distributionData = res.data;\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    loadStudentDistributionData() {\r\n      this.$request.get('/score/distribution-by-student').then(res => {\r\n        if (res.code === '200') {\r\n          const data = res.data[0];  // 假设返回的data是 [{average: 0, fail: 0, excellent: 0, pass: 0, good: 1}]\r\n          this.studentDistributionData = data;\r\n          this.$nextTick(() => {\r\n            this.renderStudentChart(data);\r\n          });\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    renderChart(data) {\r\n      const chart = echarts.init(document.getElementById('average-score-chart'));\r\n      const option = {\r\n        title: {\r\n          text: '各班级平均分折线图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(item => item.class_name)\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: '平均分',\r\n          type: 'line',\r\n          data: data.map(item => item.avg_score)\r\n        }]\r\n      };\r\n      chart.setOption(option);\r\n    },\r\n    renderStudentChart(data) {\r\n      const chart = echarts.init(document.getElementById('student-score-distribution-chart'));\r\n      const option = {\r\n        title: {\r\n          text: '个人成绩分布图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        series: [{\r\n          name: '成绩分布',\r\n          type: 'pie',\r\n          radius: '50%',\r\n          data: [\r\n            { value: data.excellent, name: '优秀(90分以上)' },\r\n            { value: data.good, name: '良好(80-90分)' },\r\n            { value: data.average, name: '中等(70-80分)' },\r\n            { value: data.pass, name: '及格(60-70分)' },\r\n            { value: data.fail, name: '不及格(60分以下)' }\r\n          ]\r\n        }]\r\n      };\r\n      chart.setOption(option);\r\n    },\r\n    load() {\r\n      this.loadAverageScores();\r\n      this.loadDistributionData(); // 查询按钮点击后加载对应课程的成绩分布数据\r\n    },\r\n    reset() {\r\n      this.courseId = 1;\r\n      this.loadAverageScores();\r\n      this.loadDistributionData(); // 重新加载默认的成绩分布数据\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}