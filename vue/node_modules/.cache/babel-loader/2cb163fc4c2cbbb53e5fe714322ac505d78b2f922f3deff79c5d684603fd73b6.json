{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"Analysis\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ids: [],\n      courseData: [],\n      courseId: 1,\n      distributionData: [],\n      // 用于存储各班成绩分布数据\n      studentDistributionData: [],\n      // 用于存储当前学生成绩分布数据\n      teacherDistributionData: [],\n      // 用于存储教师查看的学生成绩分布数据\n\n      specialityData: [],\n      // 新增的专业数据\n      classData: [],\n      // 新增的班级数据\n      specialityId: 1,\n      // 默认专业ID\n      classId: null,\n      gpaRankingData: [] // 用于存储学生绩点排名数据\n    };\n  },\n\n  created() {\n    this.load(1);\n    this.loadCourse();\n    this.loadAverageScores();\n    this.loadDistributionData();\n    if (this.user.role === 'STUDENT') {\n      this.loadStudentDistributionData();\n    }\n    if (this.user.role === 'TEACHER') {\n      this.loadTeacherDistributionData();\n      this.getclassid(this.user.id, this.loadGpaRanking);\n    }\n    this.loadSpeciality();\n    this.loadClass();\n    if (this.user.role === 'ADMIN') {\n      this.loadGpaRanking();\n    }\n  },\n  methods: {\n    getclassid(teacherId, callback) {\n      this.$request.get('/classes/selectByTeacher', {\n        params: {\n          teacherId: teacherId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.classId = res.data.id;\n          if (callback) callback(); // 调用回调函数\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadCourse() {\n      this.$request.get('/course/selectAll').then(res => {\n        if (res.code === '200') {\n          this.courseData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadSpeciality() {\n      this.$request.get('/speciality/selectAll').then(res => {\n        if (res.code === '200') {\n          this.specialityData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadClass() {\n      this.$request.get('/classes/selectBySpeciality', {\n        params: {\n          specialityId: this.specialityId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.classData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadGpaRanking() {\n      this.$request.get('/student/gpaRanking', {\n        params: {\n          specialityId: this.specialityId,\n          classId: this.classId // 传递 classId，允许为 null\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.gpaRankingData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadTeacherDistributionData() {\n      if (this.user.role !== 'TEACHER') return;\n      this.$request.get('/score/distribution-by-teacher-course', {\n        params: {\n          courseId: this.courseId\n        }\n      }).then(res => {\n        if (res.code === '200' && res.data.length > 0) {\n          this.teacherDistributionData = res.data;\n          this.renderTeacherLineChart(res.data);\n        } else {\n          this.teacherDistributionData = [];\n          this.renderTeacherLineChart([]);\n          this.$message.error(res.msg || '暂无数据');\n        }\n      });\n    },\n    renderTeacherLineChart(data) {\n      const chart = echarts.init(document.getElementById('teacher-distribution-line-chart'));\n      if (!data || data.length === 0) {\n        // 如果数据为空，则显示一条消息\n        chart.clear();\n        chart.setOption({\n          title: {\n            text: '学生成绩分布图'\n          },\n          xAxis: {\n            type: 'category',\n            data: []\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: []\n        });\n        return;\n      }\n\n      // 过滤掉 null 或 undefined 的元素\n      const validData = data.filter(item => item !== null && item !== undefined);\n\n      // 将成绩分布数据转换为折线图所需的数据\n      const scoreCategories = ['优秀(90分以上)', '良好(80-90分)', '中等(70-80分)', '及格(60-70分)', '不及格(60分以下)'];\n      const scores = [validData.reduce((acc, item) => acc + (item.excellent || 0), 0), validData.reduce((acc, item) => acc + (item.good || 0), 0), validData.reduce((acc, item) => acc + (item.average || 0), 0), validData.reduce((acc, item) => acc + (item.pass || 0), 0), validData.reduce((acc, item) => acc + (item.fail || 0), 0)];\n\n      // 绘制折线图\n      const option = {\n        title: {\n          text: '学生成绩分布图'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: scoreCategories\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '学生数量',\n          type: 'line',\n          data: scores\n        }]\n      };\n      chart.setOption(option);\n    },\n    loadAverageScores() {\n      if (this.user.role !== 'ADMIN') return;\n      this.$request.get('/score/average-by-class', {\n        params: {\n          courseId: this.courseId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          res.data.sort((a, b) => a.class_name.localeCompare(b.class_name));\n          this.renderChart(res.data);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadDistributionData() {\n      if (this.user.role !== 'ADMIN') return;\n      this.$request.get('/score/distribution-by-class', {\n        params: {\n          courseId: this.courseId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.distributionData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadStudentDistributionData() {\n      this.$request.get('/score/distribution-by-student').then(res => {\n        if (res.code === '200') {\n          const data = res.data[0]; // 假设返回的data是 [{average: 0, fail: 0, excellent: 0, pass: 0, good: 1}]\n          this.studentDistributionData = data;\n          this.$nextTick(() => {\n            this.renderStudentChart(data);\n          });\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    renderChart(data) {\n      const chart = echarts.init(document.getElementById('average-score-chart'));\n      const option = {\n        title: {\n          text: '各班级平均分折线图'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(item => item.class_name)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '平均分',\n          type: 'line',\n          data: data.map(item => item.avg_score)\n        }]\n      };\n      chart.setOption(option);\n    },\n    renderStudentChart(data) {\n      const chart = echarts.init(document.getElementById('student-score-distribution-chart'));\n      const option = {\n        title: {\n          text: '个人成绩分布图'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        series: [{\n          name: '成绩分布',\n          type: 'pie',\n          radius: '50%',\n          data: [{\n            value: data.excellent,\n            name: '优秀(90分以上)'\n          }, {\n            value: data.good,\n            name: '良好(80-90分)'\n          }, {\n            value: data.average,\n            name: '中等(70-80分)'\n          }, {\n            value: data.pass,\n            name: '及格(60-70分)'\n          }, {\n            value: data.fail,\n            name: '不及格(60分以下)'\n          }]\n        }]\n      };\n      chart.setOption(option);\n    },\n    load() {\n      this.loadAverageScores();\n      this.loadDistributionData(); // 查询按钮点击后加载对应课程的成绩分布数据\n      this.loadTeacherDistributionData();\n    },\n    reset() {\n      this.courseId = 1;\n      this.loadAverageScores();\n      this.loadDistributionData(); // 重新加载默认的成绩分布数据\n      this.loadTeacherDistributionData();\n    },\n    reset2() {\n      this.specialityId = 1;\n      this.classId = null;\n      this.loadGpaRanking();\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","tableData","pageNum","pageSize","total","form","user","JSON","parse","localStorage","getItem","ids","courseData","courseId","distributionData","studentDistributionData","teacherDistributionData","specialityData","classData","specialityId","classId","gpaRankingData","created","load","loadCourse","loadAverageScores","loadDistributionData","role","loadStudentDistributionData","loadTeacherDistributionData","getclassid","id","loadGpaRanking","loadSpeciality","loadClass","methods","teacherId","callback","$request","get","params","then","res","code","$message","error","msg","length","renderTeacherLineChart","chart","init","document","getElementById","clear","setOption","title","text","xAxis","type","yAxis","series","validData","filter","item","undefined","scoreCategories","scores","reduce","acc","excellent","good","average","pass","fail","option","tooltip","trigger","sort","a","b","class_name","localeCompare","renderChart","$nextTick","renderStudentChart","map","avg_score","radius","value","reset","reset2"],"sources":["src/views/manager/Analysis.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search-bar\">\r\n      <div class=\"left\">\r\n        <el-select v-model=\"courseId\" placeholder=\"请选择课程\" style=\"width: 200px\">\r\n          <el-option v-for=\"item in courseData\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n        </el-select>\r\n        <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load()\">查询</el-button> <!--调用了load方法-->\r\n        <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n      </div>\r\n      <div class=\"right\" v-if=\"user.role === 'ADMIN'\">\r\n        <el-select v-model=\"specialityId\" placeholder=\"请选择专业\" style=\"width: 200px\" @change=\"loadClass\">\r\n          <el-option v-for=\"item in specialityData\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n        </el-select>\r\n        <el-select v-model=\"classId\" placeholder=\"请选择班级\" style=\"width: 200px\">\r\n          <el-option v-for=\"item in classData\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n        </el-select>\r\n        <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"loadGpaRanking\">查询绩点排名</el-button>\r\n        <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset2\">重置</el-button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"table\" v-if=\"user.role === 'ADMIN'\">\r\n      <div id=\"average-score-chart\" style=\"width: 100%; height: 400px;\"  ></div>\r\n\r\n      <el-table :data=\"distributionData\" v-if=\"distributionData.length > 0\">\r\n        <el-table-column prop=\"className\" label=\"班级\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"excellent\" label=\"优秀(90分以上)\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"good\" label=\"良好(80-90分)\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"average\" label=\"中等(70-80分)\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"pass\" label=\"及格(60-70分)\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"fail\" label=\"不及格(60分以下)\" width=\"180\"></el-table-column>\r\n      </el-table>\r\n      <div v-else>\r\n        <p>暂无数据</p>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- GPA排名图 -->\r\n    <div class=\"table\" v-if=\"gpaRankingData.length > 0 && user.role !== 'STUDENT' \">\r\n      <table>\r\n        <thead>\r\n        <tr>\r\n          <th>排名</th>\r\n          <th>学生姓名</th>\r\n          <th>GPA</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr v-for=\"(item, index) in gpaRankingData\" :key=\"item.studentId\">\r\n          <td>{{ index + 1 }}</td>\r\n          <td>{{ item.studentName }}</td>\r\n          <td>{{ item.gpa }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div class=\"table\" v-else>\r\n      <p>暂无数据</p>\r\n    </div>\r\n\r\n    <div class=\"table\" v-if=\"user.role === 'STUDENT'\">\r\n      <div id=\"student-score-distribution-chart\" style=\"width: 100%; height: 400px;\"></div>\r\n    </div>\r\n\r\n    <div class=\"table\" v-if=\"user.role === 'TEACHER'\">\r\n      <div id=\"teacher-distribution-line-chart\" style=\"width: 100%; height: 400px;\"></div>\r\n      <div v-if=\"teacherDistributionData.length === 0\">\r\n        <p>暂无数据</p>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n  name: \"Analysis\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      ids: [],\r\n      courseData: [],\r\n      courseId: 1,\r\n      distributionData: [] ,// 用于存储各班成绩分布数据\r\n      studentDistributionData: [], // 用于存储当前学生成绩分布数据\r\n      teacherDistributionData: [], // 用于存储教师查看的学生成绩分布数据\r\n\r\n      specialityData: [], // 新增的专业数据\r\n      classData: [], // 新增的班级数据\r\n      specialityId: 1, // 默认专业ID\r\n      classId: null,\r\n      gpaRankingData: [] // 用于存储学生绩点排名数据\r\n\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n    this.loadCourse()\r\n    this.loadAverageScores()\r\n    this.loadDistributionData()\r\n    if (this.user.role === 'STUDENT') {\r\n      this.loadStudentDistributionData();\r\n    }\r\n    if (this.user.role === 'TEACHER') {\r\n      this.loadTeacherDistributionData();\r\n      this.getclassid(this.user.id, this.loadGpaRanking)\r\n    }\r\n    this.loadSpeciality()\r\n    this.loadClass()\r\n    if (this.user.role === 'ADMIN') {\r\n      this.loadGpaRanking()\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    getclassid(teacherId, callback){\r\n      this.$request.get('/classes/selectByTeacher', {\r\n        params: {\r\n          teacherId: teacherId\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.classId = res.data.id;\r\n          if (callback) callback(); // 调用回调函数\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    loadCourse() {\r\n      this.$request.get('/course/selectAll').then(res => {\r\n        if (res.code === '200') {\r\n          this.courseData = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    loadSpeciality() {\r\n      this.$request.get('/speciality/selectAll').then(res => {\r\n        if (res.code === '200') {\r\n          this.specialityData = res.data;\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    loadClass() {\r\n      this.$request.get('/classes/selectBySpeciality', {\r\n        params: {\r\n          specialityId: this.specialityId\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.classData = res.data;\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    loadGpaRanking() {\r\n      this.$request.get('/student/gpaRanking', {\r\n        params: {\r\n          specialityId: this.specialityId,\r\n          classId: this.classId // 传递 classId，允许为 null\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.gpaRankingData = res.data;\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n\r\n    loadTeacherDistributionData() {\r\n      if (this.user.role !== 'TEACHER') return;\r\n      this.$request.get('/score/distribution-by-teacher-course', {\r\n        params: {\r\n          courseId: this.courseId\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200' && res.data.length > 0) {\r\n          this.teacherDistributionData = res.data;\r\n          this.renderTeacherLineChart(res.data);\r\n        } else {\r\n          this.teacherDistributionData = [];\r\n          this.renderTeacherLineChart([]);\r\n          this.$message.error(res.msg || '暂无数据');\r\n        }\r\n      });\r\n    },\r\n    renderTeacherLineChart(data) {\r\n      const chart = echarts.init(document.getElementById('teacher-distribution-line-chart'));\r\n\r\n      if (!data || data.length === 0) {\r\n        // 如果数据为空，则显示一条消息\r\n        chart.clear();\r\n        chart.setOption({\r\n          title: {\r\n            text: '学生成绩分布图'\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: []\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: []\r\n        });\r\n        return;\r\n      }\r\n\r\n      // 过滤掉 null 或 undefined 的元素\r\n      const validData = data.filter(item => item !== null && item !== undefined);\r\n\r\n      // 将成绩分布数据转换为折线图所需的数据\r\n      const scoreCategories = ['优秀(90分以上)', '良好(80-90分)', '中等(70-80分)', '及格(60-70分)', '不及格(60分以下)'];\r\n      const scores = [\r\n        validData.reduce((acc, item) => acc + (item.excellent || 0), 0),\r\n        validData.reduce((acc, item) => acc + (item.good || 0), 0),\r\n        validData.reduce((acc, item) => acc + (item.average || 0), 0),\r\n        validData.reduce((acc, item) => acc + (item.pass || 0), 0),\r\n        validData.reduce((acc, item) => acc + (item.fail || 0), 0)\r\n      ];\r\n\r\n      // 绘制折线图\r\n      const option = {\r\n        title: {\r\n          text: '学生成绩分布图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: scoreCategories\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: '学生数量',\r\n          type: 'line',\r\n          data: scores\r\n        }]\r\n      };\r\n      chart.setOption(option);\r\n    },\r\n    loadAverageScores() {\r\n      if (this.user.role !== 'ADMIN') return;\r\n      this.$request.get('/score/average-by-class', {\r\n        params: {\r\n          courseId: this.courseId\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          res.data.sort((a, b) => a.class_name.localeCompare(b.class_name));\r\n          this.renderChart(res.data);\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    loadDistributionData() {\r\n      if (this.user.role !== 'ADMIN') return;\r\n      this.$request.get('/score/distribution-by-class', {\r\n        params: {\r\n          courseId: this.courseId\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.distributionData = res.data;\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    loadStudentDistributionData() {\r\n      this.$request.get('/score/distribution-by-student').then(res => {\r\n        if (res.code === '200') {\r\n          const data = res.data[0];  // 假设返回的data是 [{average: 0, fail: 0, excellent: 0, pass: 0, good: 1}]\r\n          this.studentDistributionData = data;\r\n          this.$nextTick(() => {\r\n            this.renderStudentChart(data);\r\n          });\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    renderChart(data) {\r\n      const chart = echarts.init(document.getElementById('average-score-chart'));\r\n      const option = {\r\n        title: {\r\n          text: '各班级平均分折线图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.map(item => item.class_name)\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: '平均分',\r\n          type: 'line',\r\n          data: data.map(item => item.avg_score)\r\n        }]\r\n      };\r\n      chart.setOption(option);\r\n    },\r\n    renderStudentChart(data) {\r\n      const chart = echarts.init(document.getElementById('student-score-distribution-chart'));\r\n      const option = {\r\n        title: {\r\n          text: '个人成绩分布图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        series: [{\r\n          name: '成绩分布',\r\n          type: 'pie',\r\n          radius: '50%',\r\n          data: [\r\n            { value: data.excellent, name: '优秀(90分以上)' },\r\n            { value: data.good, name: '良好(80-90分)' },\r\n            { value: data.average, name: '中等(70-80分)' },\r\n            { value: data.pass, name: '及格(60-70分)' },\r\n            { value: data.fail, name: '不及格(60分以下)' }\r\n          ]\r\n        }]\r\n      };\r\n      chart.setOption(option);\r\n    },\r\n    load() {\r\n      this.loadAverageScores();\r\n      this.loadDistributionData(); // 查询按钮点击后加载对应课程的成绩分布数据\r\n      this.loadTeacherDistributionData();\r\n    },\r\n    reset() {\r\n      this.courseId = 1;\r\n      this.loadAverageScores();\r\n      this.loadDistributionData(); // 重新加载默认的成绩分布数据\r\n      this.loadTeacherDistributionData();\r\n    },\r\n    reset2() {\r\n      this.specialityId= 1;\r\n      this.classId=null;\r\n      this.loadGpaRanking()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.search-bar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n.left, .right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.table {\r\n  margin-top: 20px; /* 可以根据需要调整表格与其他内容之间的间距 */\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  border: 1px solid #ddd; /* 添加边框样式 */\r\n  padding: 8px; /* 设置单元格内边距 */\r\n  text-align: center; /* 让内容居中显示 */\r\n}\r\nth {\r\n  background-color: #f2f2f2; /* 设置表头背景色 */\r\n  font-size: 16px; /* 调整表头字体大小 */\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}