{"ast":null,"code":"export default {\n  name: \"Choice\",\n  data() {\n    return {\n      //页面中所有变量都放在这里\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      //新增弹窗一开始是不可见的\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        content: [{\n          required: true,\n          message: '请输入内容',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1); //页面创建完后调用的方法，请求显示第一页的数据\n  },\n\n  methods: {\n    initComment(row) {\n      this.form = JSON.parse(JSON.stringify(row)); //进行深拷贝\n      this.fromVisible = true; //打开评教弹窗\n    },\n\n    save() {},\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/choice/delete/' + id).then(res => {\n          //把id传给后台 即通过访问choice/delete/id这个url调用通过id删除的方法\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); // ids是一个数组 这里是将复选中的所有id值赋值到数组中 如 [1,2]\n    },\n\n    load(pageNum) {\n      // 分页查询 通过输入页数来获取分页的数据\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/choice/selectPage', {\n        //selectPage是ChoiceService里的接口\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      //重置方法（查询旁边的按钮）清空输入框，返回第一页\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","content","required","message","trigger","ids","created","load","methods","initComment","row","stringify","save","del","id","$confirm","type","then","response","$request","delete","res","code","$message","success","error","msg","catch","handleSelectionChange","rows","map","v","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Choice.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe>\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\" v-if=\"user.role === 'ADMIN'\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"课程名称\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"type\" label=\"课程类型\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"teacherName\" label=\"授课教师\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"score\" label=\"学分\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"num\" label=\"上课人数\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"room\" label=\"上课教室\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"week\" label=\"周几\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"segment\" label=\"第几大节\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"上课状态\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"studentName\" label=\"选课学生\" show-overflow-tooltip></el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\" v-if=\"user.role === 'STUDENT'\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>取消选课</el-button>\r\n            <el-button plain type=\"primary\" size=\"mini\" @click=initComment(scope.row) :disabled=\"scope.row.status!=='已结课'\">评教</el-button>\r\n          </template>\r\n        </el-table-column>\r\n\r\n      </el-table>\r\n\r\n      <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n        <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n          <el-form-item prop=\"content\" label=\"评教内容\">\r\n            <el-input type=\"textarea\" :rows=\"5\" v-model=\"form.content\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n\r\n\r\n      <div class=\"pagination\"> <!--分页组件，点击分页按钮会触发 71行设置每行显示的总数-->\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Choice\",\r\n  data() {\r\n    return {  //页面中所有变量都放在这里\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      name: null,\r\n      fromVisible: false, //新增弹窗一开始是不可见的\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        content: [\r\n          {required: true, message: '请输入内容', trigger: 'blur'},\r\n        ]\r\n      },\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)//页面创建完后调用的方法，请求显示第一页的数据\r\n\r\n  },\r\n  methods: {\r\n    initComment(row){\r\n      this.form=JSON.parse(JSON.stringify(row)) //进行深拷贝\r\n      this.fromVisible=true //打开评教弹窗\r\n    },\r\n    save(){\r\n\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/choice/delete/' + id).then(res => { //把id传给后台 即通过访问choice/delete/id这个url调用通过id删除的方法\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)   // ids是一个数组 这里是将复选中的所有id值赋值到数组中 如 [1,2]\r\n    },\r\n    load(pageNum) {  // 分页查询 通过输入页数来获取分页的数据\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/choice/selectPage', { //selectPage是ChoiceService里的接口\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() { //重置方法（查询旁边的按钮）清空输入框，返回第一页\r\n      this.name = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AAyDA;EACAA,IAAA;EACAC,KAAA;IACA;MAAA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAL,IAAA;MACAM,WAAA;MAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAC,OAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EAEA;;EACAC,OAAA;IACAC,YAAAC,GAAA;MACA,KAAAhB,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAe,SAAA,CAAAD,GAAA;MACA,KAAAjB,WAAA;IACA;;IACAmB,KAAA,GAEA;IACAC,IAAAC,EAAA;MAAA;MACA,KAAAC,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAC,QAAA,CAAAC,MAAA,qBAAAN,EAAA,EAAAG,IAAA,CAAAI,GAAA;UAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAjB,IAAA;UACA;YACA,KAAAgB,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAC,KAAA,QACA;IACA;IACAC,sBAAAC,IAAA;MAAA;MACA,KAAAxB,GAAA,GAAAwB,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAjB,EAAA;IACA;;IACAP,KAAAjB,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAA6B,QAAA,CAAAa,GAAA;QAAA;QACAC,MAAA;UACA3C,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAJ,IAAA,OAAAA;QACA;MACA,GAAA8B,IAAA,CAAAI,GAAA;QACA,KAAAhC,SAAA,GAAAgC,GAAA,CAAAjC,IAAA,EAAA8C,IAAA;QACA,KAAA1C,KAAA,GAAA6B,GAAA,CAAAjC,IAAA,EAAAI,KAAA;MACA;IACA;IACA2C,MAAA;MAAA;MACA,KAAAhD,IAAA;MACA,KAAAoB,IAAA;IACA;IACA6B,oBAAA9C,OAAA;MACA,KAAAiB,IAAA,CAAAjB,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}